<div class="card">
  <div class="card-body">
    <div class="d-flex align-items-center mb-4">
      <% 
        const fotoSrc = anagrafica.foto || defaultPhoto;
      %>
      <form id="photo-form"
            action="/anagrafica/update-photo/<%= anagrafica.id %>"
            method="POST"
            enctype="multipart/form-data"
            class="d-flex align-items-center">
        <div class="position-relative me-3">
          <img id="profile-img"
               src="<%= fotoSrc %>"
               alt="Foto di <%= anagrafica.nome %> <%= anagrafica.cognome %>"
               class="img-thumbnail"
               style="width:100px; height:100px; object-fit:cover;">
          <input id="foto-input"
                 type="file"
                 name="foto"
                 accept="image/*"
                 class="form-control form-control-sm d-none"
                 style="position:absolute; top:0; left:0; width:100%; height:100%; opacity:0;">
        </div>
        <div>
          <h5 class="mb-1"><%= anagrafica.nome %> <%= anagrafica.cognome %></h5>
          <button id="btn-edit-photo" type="button" class="btn btn-sm btn-outline-primary mb-2">
            Modifica foto
          </button>
          <button id="btn-save-photo" type="submit" class="btn btn-sm btn-success mb-2 d-none">
            💾 Salva
          </button>
          <button id="btn-cancel-photo" type="button" class="btn btn-sm btn-secondary mb-2 d-none">
            ↩️ Annulla
          </button>
        </div>
      </form>
    </div>

    <% 
      const dob = anagrafica.data_nascita;
      const dobStr = (typeof dob === 'string' ? dob.slice(0,10)
                      : dob instanceof Date ? dob.toISOString().split('T')[0]
                      : '—');
    %>
    <p><strong>Data di nascita:</strong> <%= dobStr %></p>
    <p><strong>Comune:</strong> <%= anagrafica.luogo_nascita %></p>
    <p><strong>Cellulare:</strong> <%= anagrafica.cellulare %></p>
    <p><strong>Note:</strong> <%= anagrafica.note || '—' %></p>

    <hr>
    <h5>Terapie collegate</h5>
    <% if (therapies.length === 0) { %>
      <p class="text-muted">Nessuna terapia registrata.</p>
    <% } else { %>
      <table class="table table-sm table-bordered">
        <thead>
          <tr>
            <th>Data</th>
            <th>Distretto</th>
            <th>Trattamento</th>
            <th>Note</th>
            <th>Allegati</th>
          </tr>
        </thead>
        <tbody>
          <% therapies.forEach(tr => {
               const td = tr.data_trattamento;
               const tdStr = (typeof td === 'string' ? td.slice(0,10)
                              : td instanceof Date ? td.toISOString().split('T')[0]
                              : '');
          %>
            <tr data-id="<%= tr.id %>">
              <td><%= tdStr %></td>
              <td><%= tr.distretto %></td>
              <td><%= tr.trattamento %></td>
              <td><%= tr.note || '—' %></td>
              <td>
                <label class="btn btn-outline-primary btn-sm m-0 upload-trigger">
                  📎
                  <input type="file class="file-input d-none" accept="image/*">
                </label>
                <button class="btn btn-sm btn-success btn-upload d-none">💾</button>
                <button class="btn btn-sm btn-secondary btn-cancel-allegato d-none">↩️</button>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    <% } %>

    <h6 class="mt-4">Allegati per ogni terapia</h6>
    <% if ((attachments||[]).length === 0) { %>
      <p class="text-muted">Nessun allegato caricato.</p>
    <% } else { %>
      <% therapies.forEach(tr => {
           const atts = attachments.filter(a=>a.terapia_id===tr.id);
      %>
        <p>
          <strong>
            <%= (typeof tr.data_trattamento === 'string'
                  ? tr.data_trattamento.slice(0,10)
                  : tr.data_trattamento instanceof Date
                    ? tr.data_trattamento.toISOString().split('T')[0]
                    : '') %>:
          </strong>
          <% atts.forEach(a => { %>
            <a href="<%= a.url %>" target="_blank" class="mx-1">🖼️</a>
          <% }) %>
        </p>
      <% }) %>
    <% } %>
  </div>
</div>

<script>
  // 1) Upload allegati con fetch + toast di conferma
  document.querySelectorAll('tbody tr').forEach(row => {
    const therapyId = row.dataset.id;
    const cell = row.querySelector('td:last-child'); // la cella "Allegati"
    const fileInput = cell.querySelector('.file-input');
    const btnUpload = cell.querySelector('.btn-upload');
    const btnCancel = cell.querySelector('.btn-cancel-allegato');
    const trigger    = cell.querySelector('.upload-trigger');

     trigger.addEventListener('click', e => {
    e.stopPropagation();
    fileInput.click();
  });

   fileInput.addEventListener('change', () => {
    if (!fileInput.files.length) return;
    btnUpload.classList.remove('d-none');
    btnCancel.classList.remove('d-none');
  });

    btnCancel.addEventListener('click', () => {
    fileInput.value = '';
    btnUpload.classList.add('d-none');
    btnCancel.classList.add('d-none');
  });
   
btnUpload.addEventListener('click', () => {
    const formData = new FormData();
    formData.append('allegato', fileInput.files[0]);

    fetch(`/terapie/${therapyId}/allegati`, {
      method: 'POST',
      body: formData
    })
    .then(res => {
      if (!res.ok) throw new Error('Upload fallito');
      return res.text();
    })
    .then(() => {
      // toast di conferma
      const toast = document.createElement('div');
      toast.className = 'alert alert-success position-fixed bottom-0 end-0 m-3';
      toast.textContent = 'Allegato caricato!';
      document.body.appendChild(toast);
      setTimeout(() => toast.remove(), 3000);

      // reset UI
      fileInput.value = '';
      btnUpload.classList.add('d-none');
      btnCancel.classList.add('d-none');
    })
    .catch(err => alert(err.message));
  });

    /*
    // click sull’icona per aprire file picker
    cell.querySelector('.upload-trigger').addEventListener('click', e => {
      e.stopPropagation();
      fileInput.click();
    });

    // quando scelgo un file, mostra Salva/Annulla
    fileInput.addEventListener('change', () => {
      if (!fileInput.files.length) return;
      btnUpload.classList.remove('d-none');
      btnCancel.classList.remove('d-none');
    });

    // annulla selezione
    btnCancel.addEventListener('click', () => {
      fileInput.value = '';
      btnUpload.classList.add('d-none');
      btnCancel.classList.add('d-none');
    });

    // upload vero e proprio
    btnUpload.addEventListener('click', () => {
      const formData = new FormData();
      formData.append('allegato', fileInput.files[0]);

      fetch(`/terapie/${therapyId}/allegati`, {
        method: 'POST',
        body: formData
      })
      .then(res => {
        if (!res.ok) throw new Error('Upload fallito');
        return res.text();
      })
      .then(() => {
        // toast di conferma
        const toast = document.createElement('div');
        toast.className = 'alert alert-success position-fixed bottom-0 end-0 m-3';
        toast.textContent = 'Allegato caricato!';
        document.body.appendChild(toast);
        setTimeout(() => toast.remove(), 3000);

        // reset UI
        fileInput.value = '';
        btnUpload.classList.add('d-none');
        btnCancel.classList.add('d-none');
      })
      .catch(err => alert(err.message));
    }); */
  });

  // 2) Photo‑editor init
  (function initPhotoEditor() {
    const btnEdit   = document.getElementById('btn-edit-photo');
    if (!btnEdit) return;
    const btnSave   = document.getElementById('btn-save-photo');
    const btnCancel = document.getElementById('btn-cancel-photo');
    const inputFile = document.getElementById('foto-input');
    const imgPreview= document.getElementById('profile-img');
    btnEdit.addEventListener('click', ()=>{
      inputFile.classList.remove('d-none');
      btnEdit.classList.add('d-none');
      btnSave.classList.remove('d-none');
      btnCancel.classList.remove('d-none');
    });
    btnCancel.addEventListener('click', ()=>{
      inputFile.value = '';
      inputFile.classList.add('d-none');
      btnEdit.classList.remove('d-none');
      btnSave.classList.add('d-none');
      btnCancel.classList.add('d-none');
      imgPreview.src = imgPreview.getAttribute('src');
    });
    inputFile.addEventListener('change', ()=>{
      const file = inputFile.files[0];
      if (!file) return;
      const reader = new FileReader();
      reader.onload = e => imgPreview.src = e.target.result;
      reader.readAsDataURL(file);
    });
  })();
</script>
