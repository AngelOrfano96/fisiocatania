<h3>Benvenuto, <%= user %></h3>

<div class="mb-4">
  <label for="period-select" class="form-label me-2">Intervallo:</label>
  <select id="period-select" class="form-select w-auto d-inline-block">
    <option value="week">Ultima settimana</option>
    <option value="month" selected>Ultimo mese</option>
    <option value="year">Ultimo anno</option>
  </select>
</div>

<div class="row gy-4 mb-5">
  <!-- Distretto -->
  <div class="col-12 col-md-6 col-lg-3">
    <div class="card shadow-sm">
      <div class="card-body">
        <h5 class="card-title">Distretti (terapie)</h5>
        <canvas id="chart-distretti"></canvas>
      </div>
    </div>
  </div>
  <!-- Trattamenti -->
  <div class="col-12 col-md-6 col-lg-3">
    <div class="card shadow-sm">
      <div class="card-body">
        <h5 class="card-title">Trattamenti</h5>
        <canvas id="chart-trattamenti"></canvas>
      </div>
    </div>
  </div>
  <!-- Operatori -->
  <div class="col-12 col-md-6 col-lg-3">
    <div class="card shadow-sm">
      <div class="card-body">
        <h5 class="card-title">Operatori</h5>
        <canvas id="chart-operatori"></canvas>
      </div>
    </div>
  </div>
  <!-- Giocatori -->
  <div class="col-12 col-md-6 col-lg-3">
    <div class="card shadow-sm">
      <div class="card-body">
        <h5 class="card-title">Giocatori</h5>
        <canvas id="chart-giocatori"></canvas>
      </div>
    </div>
  </div>
</div>
<!-- Modal: Report Distretto -->
<div class="modal fade" id="modalDistretto" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">
          Report distretto: <span id="md-distretto-name" class="text-primary"></span>
        </h5>
         <button id="md-all" class="btn btn-sm btn-outline-secondary ms-2">Seleziona Tutti</button>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Chiudi"></button>
      </div>
      <div class="modal-body">
        <div class="d-flex flex-wrap align-items-end gap-2 mb-3">
          <div>
            <label class="form-label mb-1">Dal</label>
            <input id="md-from" type="date" class="form-control">
          </div>
          <div>
            <label class="form-label mb-1">Al</label>
            <input id="md-to" type="date" class="form-control">
          </div>
          <button id="md-refresh" class="btn btn-outline-secondary">Aggiorna</button>
          <div class="ms-auto"></div>
          <button id="md-export" class="btn btn-primary" disabled>
            Esporta Report Distretti (terapie)
          </button>
        </div>
        <canvas id="md-chart" height="220"></canvas>
        <div id="md-summary" class="small text-muted mt-2"></div>
      </div>
    </div>
  </div>
</div>

<hr>

<hr>

<h3>Giocatori Disponibili</h3>
<div class="input-group mb-2 w-50">
  <input id="filter-avail" type="text" class="form-control" placeholder="Filtra per nome/cognome">
  <button id="btn-search-avail" class="btn btn-outline-secondary">Cerca</button>
</div>
<table id="tbl-disponibili" class="table table-striped">
  <thead>
    <tr>
      <th>Infortunato</th>
      <th>Nome Cognome</th>
    </tr>
  </thead>
  <tbody>
    <% disponibili.forEach(p => { %>
      <tr data-id="<%= p.id %>">
        <td>
          <div class="form-check form-switch">
            <input class="form-check-input switch-inf" type="checkbox"
                   <%= p.infortunio ? 'checked' : '' %> />
          </div>
        </td>
        <td><%= p.nome %> <%= p.cognome %></td>
      </tr>
    <% }) %>
  </tbody>
</table>

<hr>

<h3>Giocatori Non Disponibili</h3>
<div class="input-group mb-2 w-50">
  <input id="filter-unavail" type="text" class="form-control" placeholder="Filtra per nome/cognome">
  <button id="btn-search-unavail" class="btn btn-outline-secondary">Cerca</button>
</div>
<table id="tbl-nondisponibili" class="table table-striped">
  <thead>
    <tr>
      <th>Infortunato</th>
      <th>Nome Cognome</th>
    </tr>
  </thead>
  <tbody>
    <% nondisponibili.forEach(p => { %>
      <tr data-id="<%= p.id %>">
        <td>
          <div class="form-check form-switch">
            <input class="form-check-input switch-inf" type="checkbox"
                   <%= p.infortunio ? 'checked' : '' %> />
          </div>
        </td>
        <td><%= p.nome %> <%= p.cognome %></td>
      </tr>
    <% }) %>
  </tbody>
</table>

<script>
  window.addEventListener('load', function () {
    // 1) Inizializza DataTables con 5 righe per pagina
    const dtDisp = $('#tbl-disponibili').DataTable({
      pageLength: 5,
      lengthChange: false,
      dom: 'lrtip',
      language: {
        paginate: { previous: '«', next: '»' },
        info:     'Pagina _PAGE_ di _PAGES_',
        infoEmpty:'Nessun record',
        zeroRecords:'Nessun risultato',
        infoFiltered:'(filtrati da _MAX_ totali)'
      }
    });

    const dtNon = $('#tbl-nondisponibili').DataTable({
      pageLength: 5,
      lengthChange: false,
      dom: 'lrtip',
      language: {
        paginate: { previous: '«', next: '»' },
        info:     'Pagina _PAGE_ di _PAGES_',
        infoEmpty:'Nessun record',
        zeroRecords:'Nessun risultato',
        infoFiltered:'(filtrati da _MAX_ totali)'
      }
    });

    // 2) Filtri "Cerca"
    document.getElementById('btn-search-avail').addEventListener('click', () => {
      dtDisp.search(document.getElementById('filter-avail').value).draw();
    });
    document.getElementById('btn-search-unavail').addEventListener('click', () => {
      dtNon.search(document.getElementById('filter-unavail').value).draw();
    });

    // 3) Delego evento sugli switch per spostare le righe tra le due tabelle
    $('#tbl-disponibili, #tbl-nondisponibili').on('change', '.switch-inf', async function(){
      const $row = $(this).closest('tr');
      const id   = $row.data('id');
      const val  = this.checked;

      try {
        await fetch(`/anagrafica/${id}/infortunio`, {
          method: 'POST',
          headers: {'Content-Type':'application/json'},
          body: JSON.stringify({ infortunio: val, data_rientro: null })
        });

        if (val) {
          // da disponibili → non disponibili
          dtDisp.row($row).remove().draw();
          dtNon.row.add([
            `<div class="form-check form-switch"><input class="form-check-input switch-inf" type="checkbox" checked></div>`,
            $row.find('td:eq(1)').html()
          ]).draw();
        } else {
          // da non disponibili → disponibili
          dtNon.row($row).remove().draw();
          dtDisp.row.add([
            `<div class="form-check form-switch"><input class="form-check-input switch-inf" type="checkbox"></div>`,
            $row.find('td:eq(1)').html()
          ]).draw();
        }
      } catch {
        alert('Errore durante l’aggiornamento dello stato infortunio');
      }
    });
  });
// helper: distrugge qualunque chart già montato su una canvas
function destroyChartIfExists(canvasId) {
  const canvas = document.getElementById(canvasId);
  if (!canvas) return;
  const prev = Chart.getChart ? Chart.getChart(canvas) : null;
  if (prev) prev.destroy();
}

  // ====== Chart "Distretti (terapie)" con click ======
  let distrettiChart, modalChart, distrettiMap = {}, distrettiById = {};
let selectedDist = { id: null, nome: null }; // id='ALL' => tutti

    function toDateInputValue(d) {
    return new Date(d.getTime() - d.getTimezoneOffset() * 60000)
      .toISOString().slice(0, 10);
  }

async function fetchDistrettiMap() {
  if (Object.keys(distrettiMap).length) return;
  const r = await fetch('/api/distretti');
  const j = await r.json();
  (j.items || []).forEach(d => {
    distrettiMap[d.nome] = d.id;
    distrettiById[d.id]  = d.nome;
  });
}

async function loadDistrettiChart(period = document.getElementById('period-select').value) {
  const r = await fetch('/api/dashboard/distretti?period=' + period);
  const { labels, counts } = await r.json();

  destroyChartIfExists('chart-distretti'); // <— evita “Canvas is already in use”

  const canvas = document.getElementById('chart-distretti');
  distrettiChart = new Chart(canvas, {
    type: 'pie',
    data: { labels, datasets: [{ data: counts }] },
    options: {
      plugins: { legend: { position: 'top' } },
      onClick: async (evt, _activeEls, chart) => {
        // più affidabile per individuare la fetta cliccata
        const points = chart.getElementsAtEventForMode(evt, 'nearest', { intersect: true }, true);
        if (!points.length) return;

        await fetchDistrettiMap();
        const idx  = points[0].index;
        const nome = chart.data.labels[idx];
        const id   = distrettiMap[nome];
        if (!id) return alert('Distretto non riconosciuto.');
        selectedDist = { id, nome };
        openDistrettoModal();
      }
    }
  });
}

document.getElementById('modalDistretto')
  .addEventListener('hidden.bs.modal', () => {
    if (modalChart) { modalChart.destroy(); modalChart = null; }
  });
// bottone "Seleziona Tutti"
document.getElementById('md-all').addEventListener('click', async () => {
  await fetchDistrettiMap(); // ci serve per i nomi
  selectedDist = { id: 'ALL', nome: 'Tutti i distretti' };
  document.getElementById('md-distretto-name').textContent = selectedDist.nome;
  reloadModalChart();
});

  // ricarica il grafico della modale per [from,to]
async function reloadModalChart() {
  const from = document.getElementById('md-from').value;
  const to   = document.getElementById('md-to').value;
  if (!from || !to) return;

  if (new Date(from) > new Date(to)) {
    document.getElementById('md-summary').textContent = 'Intervallo non valido.';
    document.getElementById('md-export').disabled = true;
    return;
  }

  const res = await fetch(`/api/dashboard/distretti/by-range?from=${from}&to=${to}`);
  if (!res.ok) {
    document.getElementById('md-summary').textContent = 'Errore nel caricamento dati.';
    document.getElementById('md-export').disabled = true;
    return;
  }
  const { items = [] } = await res.json(); // [{id,count}]

  const total = items.reduce((s,i)=>s+i.count,0);

  const ctx = document.getElementById('md-chart').getContext('2d');
  if (modalChart) modalChart.destroy();

  // --- caso: TUTTI I DISTRETTI
  if (selectedDist.id === 'ALL') {
    // ordina per frequenza desc
    const sorted = [...items].sort((a,b)=>b.count-a.count);
    const labels = sorted.map(i => distrettiById[i.id] || `ID ${i.id}`);
    const counts = sorted.map(i => i.count);

    modalChart = new Chart(ctx, {
      type: 'pie',
      data: { labels, datasets: [{ data: counts }] },
      options: { responsive:true, maintainAspectRatio:false, plugins:{ legend:{ position:'top' } } }
    });

    document.getElementById('md-summary').textContent =
      total ? `Totale ${total} terapie nel periodo selezionato.` : 'Nessuna terapia nel periodo selezionato.';

    // export (tutti)
    const btn = document.getElementById('md-export');
    btn.disabled = total === 0;
    btn.onclick = () => {
      window.location = `/report/distretti/export?distretto_id=all&from=${from}&to=${to}`;
    };
    return;
  }

  // --- caso: DISTRETTO SELEZIONATO
  const me = items.find(i => i.id === selectedDist.id)?.count || 0;
  modalChart = new Chart(ctx, {
    type: 'doughnut',
    data: { labels: [selectedDist.nome, 'Altri'], datasets: [{ data: [me, Math.max(0, total - me)] }] },
    options: { responsive:true, maintainAspectRatio:false, plugins:{ legend:{ position:'top' } } }
  });

  document.getElementById('md-summary').textContent =
    total ? `${me} terapie su ${total} nel periodo selezionato.` : 'Nessuna terapia nel periodo selezionato.';

  const btn = document.getElementById('md-export');
  btn.disabled = me === 0;
  btn.onclick = () => {
    window.location = `/report/distretti/export?distretto_id=${selectedDist.id}&from=${from}&to=${to}`;
  };
}


function openDistrettoModal() {
  const to = new Date(), from = new Date(); from.setMonth(from.getMonth() - 1);
  document.getElementById('md-from').value = toDateInputValue(from);
  document.getElementById('md-to').value   = toDateInputValue(to);

  document.getElementById('md-distretto-name').textContent = selectedDist.nome; // o 'Tutti...' se in futuro apri in ALL
  document.getElementById('md-refresh').onclick = reloadModalChart;

  reloadModalChart();

  const modal = new bootstrap.Modal(document.getElementById('modalDistretto'));
  modal.show();
}


  // cambia intervallo (dashboard select)
  document.getElementById('period-select').addEventListener('change', () => loadDistrettiChart());

  // prima render
  loadDistrettiChart();


</script>




