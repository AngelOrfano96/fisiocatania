<h3>Fascicoli</h3>

<% if (typeof message !== 'undefined' && message) { %>
  <div class="alert alert-danger"><%= message %></div>
<% } %>
<script>
   $(document).ready(function() {
    $('#fascicoli-table').DataTable({
      pageLength: 4,
      lengthChange: false,    // nasconde il selettore "Mostra X righe"
      language: {
        paginate: {
          previous: '¬´',
          next:     '¬ª'
        },
        info:      'Pagina _PAGE_ di _PAGES_',
        infoEmpty: 'Nessun record',
        zeroRecords: 'Nessun risultato',
        infoFiltered: '(filtrati da _MAX_ totali)'
      }
    });
  });
  </script>
<form method="GET" action="/fascicoli" class="row g-2 mb-4">
  <div class="col-md-5">
    <input
      type="text"
      name="cognome"
      class="form-control"
      placeholder="Filtra per Cognome"
      value="<%= filters.cognome %>"
    >
  </div>
  <div class="col-md-5">
    <input
      type="text"
      name="nome"
      class="form-control"
      placeholder="Filtra per Nome"
      value="<%= filters.nome %>"
    >
  </div>
  <div class="col-md-2 text-end">
    <button class="btn btn-primary w-100">Filtra</button>
  </div>
</form>

<table id="fascicoli-table" class="table table-striped">
  <thead>
    <tr>
      <th>Foto</th>
      <th>Anagrafica</th>
      <th>Data Nascita</th>
      <th>Comune</th>
      <th>Cellulare</th>
      <th>Fascicolo</th>
    </tr>
  </thead>
  <tbody>
    <% anagrafiche.forEach(a => {
         const fotoSrc = a.foto || defaultPhoto;
         const dataDisplay = typeof a.data_nascita === 'string'
           ? a.data_nascita.slice(0,10)
           : '';
    %>
      <tr>
        <td>
          <img
            src="<%= fotoSrc %>"
            alt="Foto di <%= a.nome %> <%= a.cognome %>"
            class="img-thumbnail"
            style="width:60px; height:60px; object-fit:cover;"
            onerror="this.onerror=null; this.src='<%= defaultPhoto %>'"
          >
        </td>
        <td><%= a.nome %> <%= a.cognome %></td>
        <td><%= dataDisplay %></td>
        <td><%= a.luogo_nascita %></td>
        <td><%= a.cellulare %></td>
        <td>
          <!-- il nostro unico modo di passare l‚ÄôID, inline -->
          <button
            type="button"
            class="btn btn-sm btn-info"
            onclick="caricaFascicolo(<%= a.id %>)"
          >üëÅÔ∏è</button>
        </td>
      </tr>
    <% }) %>
  </tbody>
</table>

<!-- qui andr√† iniettato il dettaglio -->
<div id="fascicolo-detail" class="mt-4"></div>

<script>
  /**
   * 1) Richiama il partial di dettaglio via AJAX.
   */
  async function caricaFascicolo(id) {
    if (!id || isNaN(id)) {
      return alert('ID non valido: ' + id);
    }
    try {
      const res = await fetch(`/fascicoli/${id}`);
      if (!res.ok) throw new Error('Errore nel caricamento del fascicolo');
      const html = await res.text();
      document.getElementById('fascicolo-detail').innerHTML = html;
      // dopo aver iniettato l‚ÄôHTML, aggancio i listener per edit foto
      initPhotoEditor();
    } catch (err) {
      alert(err.message);
    }
  }

  /**
   * 2) Aggancia Modifica/Salva/Annulla alla foto del partial.
   *    Viene chiamata **solo** dentro caricaFascicolo().
   */
  function initPhotoEditor() {
    const btnEdit   = document.getElementById('btn-edit-photo');
    if (!btnEdit) return;  // se non c‚Äô√®, niente da fare
    const btnSave   = document.getElementById('btn-save-photo');
    const btnCancel = document.getElementById('btn-cancel-photo');
    const inputFile = document.getElementById('foto-input');
    const imgPreview= document.getElementById('profile-img');

    btnEdit.addEventListener('click', () => {
      inputFile.classList.remove('d-none');
      btnEdit.classList.add('d-none');
      btnSave.classList.remove('d-none');
      btnCancel.classList.remove('d-none');
    });
    btnCancel.addEventListener('click', () => {
      inputFile.value = '';
      inputFile.classList.add('d-none');
      btnEdit.classList.remove('d-none');
      btnSave.classList.add('d-none');
      btnCancel.classList.add('d-none');
      imgPreview.src = imgPreview.getAttribute('src');
    });
    inputFile.addEventListener('change', () => {
      const file = inputFile.files[0];
      if (!file) return;
      const reader = new FileReader();
      reader.onload = e => imgPreview.src = e.target.result;
      reader.readAsDataURL(file);
    });
  }
</script>
